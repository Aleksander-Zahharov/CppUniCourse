// находящийся в корневом каталоге вашего рабочего пространства. Если у вас есть несколько 
// файлов tasks.json в разных подкаталогах, Visual Studio Code будет использовать 
// корневой файл tasks.json, если не указано иное."
{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: gcc.exe build active file. Task 1 for Lab 1",    // Для С-файлов используется gcc.exe, для С++(и C) файлов g++.exe ...
            "command": "cmd",
            "args": [
                "/c",
                "chcp 65001>nul && C:/msys64/ucrt64/bin/gcc.exe",   // ... вот тут менять. Я только в этам (первом) практосе использую gcc, чисто для галочки.
                "-fdiagnostics-color=always",
                "-g",
                "${file}",
                "functions.cpp", /* Добавил эту строчку. Начало работать обыной папке практоса (без открытой "С++" папки). */
                                /* О, с открытой папкой "C++" можно закомментить в ЭТОМ ФАЙЛЕ эту строчку и все равно будет все компилироваться. Главное в корневом tasks.json добавить эту строчку. */
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe",
                "-lstdc++" // Добавил эту строку, все начало компилироваться, наконец-то. 
                // "Флаг -lstdc++ используется для явного указания компилятору, что необходимо подключить стандартную библиотеку C++ (libstdc++).
                // Это может быть полезно при компиляции программ на C++ с использованием компилятора GCC, чтобы гарантировать,
                // что все необходимые функции и классы из стандартной библиотеки C++ будут доступны."
                // "Если вы используете компилятор g++, то флаг -lstdc++ не нужен,
                // так как g++ автоматически включает стандартную библиотеку C++".
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [ // "В данном случае, использование $gcc в problemMatcher подходит как для gcc, так и для g++, 
                "$gcc"          // так как оба компилятора выводят ошибки и предупреждения в одном и том же формате."
                                // Но использование gcc - это стандартная практика как для gcc (C) компайлеров, так и для g++ (C/C++).
            ],
            "group": {          	// Если вам нужно изменить компилятор по умолчанию, вы можете запустить Tasks: Configure Default Build Task в палитре команд. 
                "kind": "build",    // В качестве альтернативы вы можете изменить tasks.json файл и удалить задачу по умолчанию,
                "isDefault": true    // заменив ЭТОТ сегмент ("group":{...}) на "group": "build",
            },
            "detail": "Details: Task 1 for Lab 1"
        }
    ]
}